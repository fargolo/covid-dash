spread(petal_measure, measure_value)
new_iris <- iris %>%
gather(key=petal_measure,
value=measure_value, starts_with('Petal'))
spread(data = new_iris, key=petal_measure,
value=measure_value)
ncol(new_iris)
spread(data = new_iris[,4:5], key=petal_measure,
value=measure_value)
spread(data = new_iris[,c(1,4:5)], key=petal_measure,
value=measure_value)
??install_github
version()
R.version
R.version
# Available datasets (gets IDs)?
?kobo_datasets()
# Available datasets (gets IDs)?
?koboloadeR::kobo_datasets()
library(koboloadeR)
kobo_apps("data_viewer")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user = "felipe:KoBo_2019")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019")
# data download
database <- kobo_data_downloader(formid="034554",
user = "ana:vietnam")
database
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019")
# Available datasets (gets IDs)?
?koboloadeR::kobo_datasets(user="felipe:KoBo_2019")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="https://os-kobo1.onesky.org")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="os-kobo1.onesky.org")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="os-kobo1.onesky")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="os-kobo1")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="kobo")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="kobohr")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="kobohr")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="ona")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="https://os-kobo1.onesky.org")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="os-kobo1.onesky.org")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="os-kobo1.onesky")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="os-kobo1")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="https://os-kobo1.onesky.org")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",api="https://os-kobo1.onesky.org/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/assets/")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/assets/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/forms/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/#forms/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/#/forms/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/#/forms/aurcqzXtayfHCDb2kVNVNW")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/#/forms/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/#/forms")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/api/v1")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/api/v1/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/api/")
# direct login through R-Shiny, requires Shiny
kobo_apps("data_viewer")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/api/v2/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/api/v1/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/api")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/api/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/api/v1/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/api/v1/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/api/v2/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/api/v1/data")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/api/v1/data/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/api/v2/data/")
library(koboloadeR)
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/api/v9/data/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="https://os-kobo1.onesky.org/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/#/")
# Available datasets (gets IDs)?
koboloadeR::kobo_datasets(user="felipe:KoBo_2019",
api="os-kobo1.onesky.org/#/forms/")
kobo_server_url<-"https://kobo.humanitarianresponse.info/"
kc_server_url<-"https://kc.humanitarianresponse.info/"
# Reference https://github.com/tinok/kobo_api/blob/master/get_csv.py
# Get asset information
asset_uid<-"aurcqzXtayfHCDb2kVNVNW"
source_url("https://raw.githubusercontent.com/ppsapkota/kobohr_apitoolbox/master/R/r_func_ps_kobo_utils.R")
install.packages(devtools)
install.packages("devtools")
library(devtools)
source_url("https://raw.githubusercontent.com/ppsapkota/kobohr_apitoolbox/master/R/r_func_ps_kobo_utils.R")
kobo_server_url<-"https://kobo.humanitarianresponse.info/"
kc_server_url<-"https://kc.humanitarianresponse.info/"
# Reference https://github.com/tinok/kobo_api/blob/master/get_csv.py
# Get asset information
asset_uid<-"aurcqzXtayfHCDb2kVNVNW"
# define some variables
# These variables define the default export. Each value can be overwritten when running the `create' command
# e.g. `create xml 'English (en_US)' true'. It's possible to skip some arguments at the end but they need to be passed in the same order.
asset_uid_<-asset_uid
type <- "csv"
lang <- "xml"
fields_from_all_versions <- "true"
hierarchy_in_labels <- "false"
group_sep = "/"
#Examples to call function
d_exports<-kobohr_create_export(type=type,lang=lang,fields_from_all_versions=fields_from_all_versions,hierarchy_in_labels=hierarchy_in_labels,group_sep=group_sep,asset_uid=asset_uid,kobo_user,Kobo_pw)
#Examples to call function
d_exports<-kobohr_create_export(type=type,lang=lang,fields_from_all_versions=fields_from_all_versions,hierarchy_in_labels=hierarchy_in_labels,
group_sep=group_sep,asset_uid=asset_uid,"felipe:KoBo_2019",Kobo_pw)
#Examples to call function
d_exports<-kobohr_create_export(type=type,lang=lang,fields_from_all_versions=fields_from_all_versions,hierarchy_in_labels=hierarchy_in_labels,
group_sep=group_sep,asset_uid=asset_uid,"felipe","KoBo_2019")
library(jsonlite)
#Examples to call function
d_exports<-kobohr_create_export(type=type,lang=lang,fields_from_all_versions=fields_from_all_versions,hierarchy_in_labels=hierarchy_in_labels,
group_sep=group_sep,asset_uid=asset_uid,"felipe","KoBo_2019")
?kobohr_create_export()
312*32
4000/4
4000/4/32
300*32
10000/350
16*310
16*310
16*310*2
(16*310*2)+4000
(16*310*2)
(16*310)
400000/8
library(ggplot2)
print("Alo")
install.packages("RSelenium")
library(RSelenium)
RSelenium::checkForServer()
remove.packages("RSelenium")
library(httr)
urban_api <- function(path) {
url <- modify_url("https://english.urbanmind-data.org/", path = path)
GET(url)
}
resp <- urban_api("/auth/login")
resp
http_type(resp)
GET("https://english.urbanmind-data.org/auth/login")
POST("https://english.urbanmind-data.org/auth/login",
query = list(username = "ryan", password="4@4K#KHLLS"))
POST("https://english.urbanmind-data.org/auth/login",
body = list(username = "ryan", password="4@4K#KHLLS"),
encode=("form"))
GET("http://httpbin.org", authenticate("ryan", "4@4K#KHLLS"))
resp <- GET("http://httpbin.org", authenticate("ryan", "4@4K#KHLLS"))
resp
View(resp)
resp[["content"]]
resp <- GET("https://english.urbanmind-data.org/auth/login",
authenticate("ryan", "4@4K#KHLLS"))
resp
http_type(resp)
library(magrittr)
library(lubridate)
library(tidyr)
library(dplyr)
covid_df <- read.csv("time_series_19-covid-Confirmed.csv")
covid_long <- covid_df %>% gather(var,val,-c(1:4))
covid_long$date <- substring(covid_long$var, 2) %>%
as.Date(.,"%m.%d.%y")
covid_long <- covid_long %>% select(Country.Region,Lat,Long,date,val)
names(covid_long)[1]<- "Country"
covid_long$date <- as.Date(covid_long$date)
covid_long_d <- covid_long %>%
group_by(Country) %>%
mutate(diff = date - min(date)) %>%
ungroup()
covid_long_d <- covid_long_d %>%
mutate(Country_id = group_indices(covid_long_d, .dots="Country"))
getwd()
setwd("covid-dash/")
covid_df <- read.csv("data/time_series_19-covid-Confirmed.csv")
covid_long <- covid_df %>% gather(var,val,-c(1:4))
covid_long$date <- substring(covid_long$var, 2) %>%
as.Date(.,"%m.%d.%y")
covid_long <- covid_long %>% select(Country.Region,Lat,Long,date,val)
names(covid_long)[1]<- "Country"
covid_long$date <- as.Date(covid_long$date)
covid_long_d <- covid_long %>%
group_by(Country) %>%
mutate(diff = date - min(date)) %>%
ungroup()
covid_long_d <- covid_long_d %>%
mutate(Country_id = group_indices(covid_long_d, .dots="Country"))
View(covid_long_d)
?group_indices
group_indices(mtcars, cyl)
mtcars
?dplyr::id()
covid_long_d
dplyr::id(covid_long_d$Country)
dplyr::id(covid_long_d[,"Country"])
dplyr::id(covid_long_d[,"Country"]) %>% length()
covid_long_d$Countr_id <- dplyr::id(covid_long_d[,"Country"])
View(covid_long_d)
covid_long <- covid_df %>% gather(var,val,-c(1:4))
covid_long$date <- substring(covid_long$var, 2) %>%
as.Date(.,"%m.%d.%y")
covid_long <- covid_long %>% select(Country.Region,Lat,Long,date,val)
names(covid_long)[1]<- "Country"
covid_long$date <- as.Date(covid_long$date)
covid_long_d <- covid_long %>%
group_by(Country) %>%
mutate(diff = date - min(date)) %>%
ungroup()
covid_long_d$Countr_id <- dplyr::id(covid_long_d[,"Country"])
write.csv(covid_long_d,"../data/covid-long17Mar.csv")
write.csv(covid_long_d,"data/covid-long17Mar.csv")
covid_long_d <- covid_long %>%
filter(val != 0) %>%
group_by(Country) %>%
mutate(diff = date - min(date)) %>%
ungroup()
nrow(covid_long_d)
covid_long_d$Countr_id <- dplyr::id(covid_long_d[,"Country"])
write.csv(covid_long_d,"../data/covid-long17Mar.csv")
write.csv(covid_long_d,"data/covid-long17Mar.csv")
View(covid_long_d)
library(lme4)
read.csv("data/covid-long17Mar.csv")
covid_long_d <- read.csv("data/covid-long17Mar.csv")
exp_fit <- lmer(log(val) ~ 1 + diff + (factor(Countr_df)|diff),data=covid_long_d)
nrow(covid_long_d)
covid_long_d <- covid_long_d %>% filter(Country != "US")
nrow(covid_long_d)
exp_fit <- lmer(log(val) ~ 1 + diff + (factor(Countr_id)|diff),data=covid_long_d)
factor(covid_long_d$Countr_id)
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d <- read.csv("data/covid-long17Mar.csv")
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d <- covid_long_d %>% filter(Country %in% c("US","Brazil"))
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>% filter(Country %in% c("US","Brazil"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
exp_fit
summary(exp_fit)
exp(predict(exp_fit))
exp_pred <- exp(predict(exp_fit))
class(exp_pred)
lengt(exp_pred)
length(exp_pred)
nrow(covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
library(ggplot2)
ggplot(covid_long_d,aes(x=diff,y=val))+
geom_point()+
geom_point(covid_long_d,aes(x=diff,y=exp_pred))
ggplot(covid_long_d,aes(x=diff,y=val))+
geom_point()+
geom_point(aes(x=diff,y=exp_pred))
ggplot(covid_long_d,aes(x=diff,y=val))+
geom_point()+
geom_line(aes(x=diff,y=exp_pred,color=blue))
ggplot(covid_long_d,aes(x=diff,y=val))+
geom_point()+
geom_line(aes(x=diff,y=exp_pred,color=:))
ggplot(covid_long_d,aes(x=diff,y=val))+
geom_point()+
geom_line(aes(x=diff,y=exp_pred,color="blue"))
ggplot(covid_long_d,aes(x=diff,y=val))+
geom_point()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
covid_long_d <- covid_long_d %>% filter(Country %in% c("China","US","Brazil"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>% filter(Country %in% c("China","US","Brazil"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ggplot(covid_long_d,aes(x=diff,y=val))+
geom_point()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_point()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
covid_long_d <- covid_long_d %>% filter(Country %in% c("Venezuela","Chile","Argentina","Brazil"))
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>% filter(Country %in% c("Venezuela","Chile","Argentina","Brazil"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>% filter(Country %in% c("Venezuela","Chile","Argentina","Brazil"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
View(covid_df
)
covid_long_d <- read.csv("data/covid-long17Mar.csv")
View(covid_df)
covid_long_d <- read.csv("data/covid-long17Mar.csv")
View(covid_long_d)
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador",
"Germany","France"))
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador",
"Germany","France"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d <- read.csv("data/covid-long17Mar.csv")
View(covid_long_d)
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador",
"Germany","France","Singapore"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador",
"Germany","France","Singapore","US"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador",
"Germany","France","Singapore","US"))
exp_fit <- lmer(log(val) ~ 1 + (factor(Countr_id)|diff),data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_point()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_jitter()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
exp_fit@beta
exp_fit@u
?exp_fit
?lmer
unique(covid_long_d) %>% length()
unique(covid_long_d$diff) %>% length()
54*9
frame(exp_fit)
(exp_fit@frame)
(exp_fit@Gp)
(exp_fit@flist)
(exp_fit@cnms)
(exp_fit@cnms$diff)
(exp_fit@theta)
ranef(exp_fit)
ranef(exp_fit)
exp_fit <- lmer(log(val) ~ 1 + (Country|diff),data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ranef(exp_fit)
exp_fit <- lmer(log(val) ~ 1 + (Country|1)*diff,data=covid_long_d)
exp_fit <- lmer(log(val) ~ 1 + (1|Country)*diff, data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ranef(exp_fit)
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_jitter()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador",
"Germany","France"))
exp_fit <- lmer(log(val) ~ 1 + (1|Country)*diff, data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_jitter()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador"))
exp_fit <- lmer(log(val) ~ 1 + (1|Country)*diff, data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_jitter()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
ranef(exp_fit)
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador",
"Uruguay","Paraguai"))
exp_fit <- lmer(log(val) ~ 1 + (1|Country)*diff, data=covid_long_d)
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>%
filter(Country %in% c("Venezuela","Chile","Argentina","Brazil","Ecuador",
"Uruguay","Paraguai"))
exp_fit <- lmer(log(val) ~ 1 + (1|Country)*diff, data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_jitter()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
covid_long_d <- covid_long_d %>%
filter(Country %in% c('Brazil','Uruguay', 'Argentina','Chile',
'Paraguay','Peru','Bolivia','Ecuador','Colombia','Venezuela','Suriname'))
exp_fit <- lmer(log(val) ~ 1 + (1|Country)*diff, data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_jitter()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
covid_long_d <- read.csv("data/covid-long17Mar.csv")
covid_long_d <- covid_long_d %>%
filter(Country %in% c('Brazil','Uruguay', 'Argentina','Chile',
'Paraguay','Peru','Bolivia','Ecuador','Colombia','Venezuela','Suriname'))
exp_fit <- lmer(log(val) ~ 1 + (1|Country)*diff, data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_jitter()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
ranef(exp_fit)
exp_fit
exp_fit <- lmer(log(val) ~ (1|Country) + (1|Country)*diff, data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_jitter()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
ranef(exp_fit)
exp_fit <- lmer(log(val) ~ 1 + (1|Country)*diff, data=covid_long_d)
covid_long_d$exp_pred <- exp(predict(exp_fit))
ggplot(covid_long_d,aes(x=diff,y=val,color=Country))+
geom_jitter()+
geom_line(aes(x=diff,y=exp_pred,color=Country))
ranef(exp_fit)
exp_fit
exp(0.4558)
exp(0.29)
exp(0.29*.74)
exp(0.29*-.74)
names(covid_long_d)
VIew(covid_long_d)
View(covid_long_d)
